#ifndef BANK_ACCOUNT_BUILDER_H
#define BANK_ACCOUNT_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef BANK_ACCOUNT_READER_H
#include "bank_account_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

#define __Status_formal_args , Status_enum_t v0
#define __Status_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, Status, Status_enum_t)

static const flatbuffers_voffset_t __Savings_required[] = { 0 };
typedef flatbuffers_ref_t Savings_ref_t;
static Savings_ref_t Savings_clone(flatbuffers_builder_t *B, Savings_table_t t);
__flatbuffers_build_table(flatbuffers_, Savings, 4)

#define __Savings_formal_args , int16_t v0, int64_t v1, double v2, double v3
#define __Savings_call_args , v0, v1, v2, v3
static inline Savings_ref_t Savings_create(flatbuffers_builder_t *B __Savings_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Savings, Savings_file_identifier, Savings_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, Savings_accountID, flatbuffers_int16, int16_t, 2, 2, INT16_C(0), Savings)
__flatbuffers_build_scalar_field(1, flatbuffers_, Savings_balance, flatbuffers_int64, int64_t, 8, 8, INT64_C(0), Savings)
__flatbuffers_build_scalar_field(2, flatbuffers_, Savings_interestEarned, flatbuffers_double, double, 8, 8, 0.0000000000000000, Savings)
__flatbuffers_build_scalar_field(3, flatbuffers_, Savings_InterestRate, flatbuffers_double, double, 8, 8, 0.0000000000000000, Savings)

static inline Savings_ref_t Savings_create(flatbuffers_builder_t *B __Savings_formal_args)
{
    if (Savings_start(B)
        || Savings_balance_add(B, v1)
        || Savings_interestEarned_add(B, v2)
        || Savings_InterestRate_add(B, v3)
        || Savings_accountID_add(B, v0)) {
        return 0;
    }
    return Savings_end(B);
}

static Savings_ref_t Savings_clone(flatbuffers_builder_t *B, Savings_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Savings_start(B)
        || Savings_balance_pick(B, t)
        || Savings_interestEarned_pick(B, t)
        || Savings_InterestRate_pick(B, t)
        || Savings_accountID_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Savings_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* BANK_ACCOUNT_BUILDER_H */
